/*************************************************************************
* ADOBE CONFIDENTIAL
* ___________________
*
*  Copyright 2015 Adobe Systems Incorporated
*  All Rights Reserved.
*
* NOTICE:  All information contained herein is, and remains
* the property of Adobe Systems Incorporated and its suppliers,
* if any.  The intellectual and technical concepts contained
* herein are proprietary to Adobe Systems Incorporated and its
* suppliers and are protected by all applicable intellectual property laws,
* including trade secret and or copyright laws.
* Dissemination of this information or reproduction of this material
* is strictly forbidden unless prior written permission is obtained
* from Adobe Systems Incorporated.
**************************************************************************/
import state from"./state.js";import{getClosestElementBasedOnSelector,sendAnalytics,getElementBasedOnSelector,getArrayElementBasedOnSelector,createAcrobatIconElement,isOrphanContentScript,createURLForAttachment,LIST_VIEW}from"./util.js";import{sendAnalyticsIfNativeViewerLaunched,processForNativeViewer}from"./native-viewer-touch-point-service.js";const ACROBAT_PROCESSED_ATTRIBUTE="acrobat-icon-added",LIST_VIEW_TOUCH_POINT_CLASS="acrobat-attachmentlistview-hyperlink",revertAttachmentParentDivStyle=t=>{t?.style?.removeProperty("padding-right")},createAcrobatTooltip=()=>{const t=document.createElement("div");return t.setAttribute("class","acrobat-attachmentlistview-hyperlink-tooltip"),t.innerText=state?.gmailConfig?.acrobatPromptText,t},createAcrobatHyperlinkForListViewAttachment=t=>{const e=t.url,n=t.name,i=document.createElement("a");i.setAttribute("class",LIST_VIEW_TOUCH_POINT_CLASS);const r=createURLForAttachment(e,"GmailListView",n);i.setAttribute("href",r),i.setAttribute("target","_blank");let a=createAcrobatIconElement();return a.setAttribute("src",state?.iconURLListView),i.appendChild(a),i.addEventListener("click",(t=>{t.stopPropagation(),sendAnalytics([["DCBrowserExt:Gmail:ListViewPrompt:Clicked"]])})),i.addEventListener("mouseenter",(t=>{t?.target?.parentElement?.setAttribute("oldTitle",t?.target?.parentElement?.getAttribute("title")),t?.target?.parentElement?.setAttribute("title","")})),i.addEventListener("mouseleave",(t=>{t?.target?.parentElement?.setAttribute("title",t?.target?.parentElement?.getAttribute("oldTitle")),t?.target?.parentElement?.setAttribute("oldTitle","")})),i.appendChild(createAcrobatTooltip()),i},getListViewPDFAttachmentsWithoutAcrobatIcon=(t,e)=>{if(!getElementBasedOnSelector(t,"pdfAttachmentWithoutAcrobatIcon","listView"))return;const n=getArrayElementBasedOnSelector(t,"pdfAttachmentWithoutAcrobatIcon","listView");let i={};if(n&&n.length>0)for(let t=0;t<n.length;t++){const r=getClosestElementBasedOnSelector(n[t],"threadElement","listView"),a=r.querySelector("[data-thread-id]");if(!a)return;const s=a.getAttribute("data-thread-id")?.substring(1);isDataPresentForThreadId(s,e)&&(i[s]?i[s].pdfAttachments.push(n[t]):(i[s]={},i[s].pdfAttachments=[n[t]],i[s].threadElement=r))}return i},getSortedMessageIds=t=>{let e=Object.keys(t).sort(((e,n)=>-t[e].timestamp+t[n].timestamp));const n=e.filter((e=>t[e]?.deleted));return e=e.filter((e=>!t[e]?.deleted)),e.push(...n),e},getAttachmentURLAgainstName=(t,e)=>{const n={};let i=!1;for(let r=0;r<t.length;r++){const a=e[t[r]];if(a.attachments?.length>0)for(let t=0;t<a.attachments.length;t++){const e=a.attachments[t];n[e.name]?(i=!0,n[e.name].push(e)):n[e.name]=[e]}if(a.driveAttachments?.length>0)for(let t=0;t<a.driveAttachments.length;t++){const e=a.driveAttachments[t];n[e.name]?(i=!0,n[e.name].push(e)):n[e.name]=[e]}}return i&&setTimeout((()=>sendAnalytics(["DCBrowserExt:Gmail:SameNameAttachment"])),2e3),n},isDataPresentForThreadId=(t,e)=>{let n=state.getMessagesForThreadId(t);return!n&&e&&e[t]&&(n=e[t].messages),!!n},getDataForThreadId=(t,e)=>{let n=state.getMessagesForThreadId(t);if(!n&&e&&e[t]&&(n=e[t].messages),n){let t=getSortedMessageIds(n);return getAttachmentURLAgainstName(t,n)}return null},isMultipleAttachmentWithSameName=(t,e)=>{const n=t[e];return n?.length>1},getAttachmentDetailsFromThreadData=(t,e,n)=>{const i=t[e];if(!i)return null;for(let t=0;t<i?.length;t++)if(!n.includes(i[t].url))return n.push(i[t].url),i[t]},addEventListenerToListViewPDFAttachment=t=>{t?.forEach((t=>{const e=getClosestElementBasedOnSelector(t,"attachmentDiv","listView");e&&(t.setAttribute("acrobat-icon-added","Y"),e.addEventListener("click",(()=>{sendAnalytics(["DCBrowserExt:Gmail:ListViewAttachment:Clicked"]),setTimeout((()=>{sendAnalyticsIfNativeViewerLaunched("Shown")}),500)}),{signal:state?.eventControllerSignal}))}))},makeTouchPointVisibleWhenAttachmentIsHovered=(t,e,n)=>{t.addEventListener("mouseenter",(()=>{isLargeLayout(n)&&!isOrphanContentScript()&&(e.style.display="flex",t.style.paddingRight="0")}),{signal:state.eventControllerSignal})},hideTouchPointWhenUserLeavesTheThread=(t,e,n)=>{n?.addEventListener("mouseleave",(()=>{isLargeLayout(t)&&(e.style.display="none",n.style.removeProperty("padding-right"))}),{signal:state.eventControllerSignal})},removeTouchPointFromAttachmentDiv=t=>{const e=t?.getElementsByClassName(LIST_VIEW_TOUCH_POINT_CLASS);e?.length>0&&t.removeChild(e[0])},addTouchPointToAttachmentDiv=(t,e,n)=>{const i=createAcrobatHyperlinkForListViewAttachment(e);makeTouchPointVisibleWhenAttachmentIsHovered(t,i,n),hideTouchPointWhenUserLeavesTheThread(n,i,t),t.appendChild(i)},addClickListenerToAttachmentDiv=(t,e)=>{t.addEventListener("click",(()=>{sendAnalytics(["DCBrowserExt:Gmail:ListViewPDFAttachment:Clicked"]),setTimeout((()=>processForNativeViewer(e,LIST_VIEW)),500),setTimeout((()=>processForNativeViewer(e,LIST_VIEW)),1e3)}),{signal:state?.eventControllerSignal})},addClickListenerToDriveAttachmentDiv=(t,e)=>{t.addEventListener("click",(()=>{sendAnalytics(["DCBrowserExt:Gmail:ListViewDrivePDFAttachment:Clicked"]),e&&!e?.isDriveAsset||setTimeout((()=>sendAnalyticsIfNativeViewerLaunched("DriveAttachment")),500)}),{signal:state?.eventControllerSignal})},processForAttachment=(t,e,n,i)=>{const r=getClosestElementBasedOnSelector(t,"attachmentDiv","listView");if(r){removeTouchPointFromAttachmentDiv(r),t.setAttribute("acrobat-icon-added","Y");const a=r.getAttribute("title"),s=isMultipleAttachmentWithSameName(e,a);let o=getAttachmentDetailsFromThreadData(e,a,n);if(s&&!o.url?.includes("showSameMailAttachmentToast")&&(o={...o,url:o.url+"&showSameMailAttachmentToast=true"}),o&&!o.isDriveAsset){const t=i.threadElement;addClickListenerToAttachmentDiv(r,o),addTouchPointToAttachmentDiv(r,o,t)}else addClickListenerToDriveAttachmentDiv(r,o)}},processForThread=(t,e,n)=>{const i=n.pdfAttachments,r=getDataForThreadId(t,e);if(!r)return;const a=[];for(let t of i)processForAttachment(t,r,a,n)},processForAllThreads=(t,e)=>{Object.keys(t).forEach((n=>{const i=t[n].pdfAttachments;if(i?.length>0){const i=t[n];processForThread(n,e,i)}}))},removeAllTouchPoints=()=>{const t=document.querySelectorAll(`.${LIST_VIEW_TOUCH_POINT_CLASS}`);if(t?.length>0)for(let e=0;e<t.length;e++)revertAttachmentParentDivStyle(t[e]?.parentElement),t[e]?.parentElement?.removeChild(t[e])},addAcrobatTouchPointInTheListView=(t,e)=>{const n=getListViewPDFAttachmentsWithoutAcrobatIcon(t);n&&processForAllThreads(n,e)},getListViewPDFAttachmentsWithoutAcrobatIconForClickListener=()=>getElementBasedOnSelector(document,"threadElement","listView")?getArrayElementBasedOnSelector(document,"pdfAttachmentWithoutAcrobatIcon","listView"):null,addEventListenersToListViewAttachments=()=>{const t=getListViewPDFAttachmentsWithoutAcrobatIconForClickListener();t&&addEventListenerToListViewPDFAttachment(t)},isLargeLayout=t=>t?.getBoundingClientRect()?.width>900,getVisibleListView=()=>{const t=getArrayElementBasedOnSelector(document,"listView","listView");for(let e=0;e<t?.length;e++)if("none"!==t[e].style?.display)return t[e];return null},processForListView=t=>{try{if(chrome?.runtime?.id)if(state?.gmailConfig?.enableListViewPromptInGmail||window.location?.search?.includes("enableAcrobatPromptInGmail")){const e=getVisibleListView();e&&addAcrobatTouchPointInTheListView(e,t)}else addEventListenersToListViewAttachments()}catch(t){sendAnalytics([["DCBrowserExt:Gmail:ListView:ProcessingError"]])}};export{processForListView,removeAllTouchPoints};